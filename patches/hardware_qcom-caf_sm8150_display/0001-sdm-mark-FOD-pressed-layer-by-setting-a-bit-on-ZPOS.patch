From 0ad2c61b64227033c0934c7f02241052615a548c Mon Sep 17 00:00:00 2001
From: Demon000 <demonsingur@gmail.com>
Date: Thu, 21 May 2020 01:40:04 +0300
Subject: [PATCH] sdm: mark FOD pressed layer by setting a bit on ZPOS

Change-Id: Ie1503da41766c31c9ec31bbb4282ae9ed62defce
---
 sdm/include/core/layer_stack.h      | 2 ++
 sdm/libs/core/drm/hw_device_drm.cpp | 6 +++++-
 sdm/libs/hwc2/hwc_display.cpp       | 4 ++++
 sdm/libs/hwc2/hwc_layers.cpp        | 5 +++++
 sdm/libs/hwc2/hwc_layers.h          | 2 ++
 5 files changed, 18 insertions(+), 1 deletion(-)

diff --git a/sdm/include/core/layer_stack.h b/sdm/include/core/layer_stack.h
index b49c425ce..eebc7d855 100644
--- a/sdm/include/core/layer_stack.h
+++ b/sdm/include/core/layer_stack.h
@@ -187,6 +187,8 @@ struct LayerFlags {
 
       uint32_t single_buffer : 1;  //!< This flag shall be set by client to indicate that the layer
                                    //!< uses only a single buffer that will not be swapped out
+
+      uint32_t fod_pressed : 1;    //!< This flag shall be set internally to mark the fod pressed layer
     };
 
     uint32_t flags = 0;       //!< For initialization purpose only.
diff --git a/sdm/libs/core/drm/hw_device_drm.cpp b/sdm/libs/core/drm/hw_device_drm.cpp
index a9531c76b..92f309a1d 100644
--- a/sdm/libs/core/drm/hw_device_drm.cpp
+++ b/sdm/libs/core/drm/hw_device_drm.cpp
@@ -1113,7 +1113,11 @@ void HWDeviceDRM::SetupAtomic(HWLayers *hw_layers, bool validate) {
         if (update_config) {
           drm_atomic_intf_->Perform(DRMOps::PLANE_SET_ALPHA, pipe_id, layer.plane_alpha);
 
-          drm_atomic_intf_->Perform(DRMOps::PLANE_SET_ZORDER, pipe_id, pipe_info->z_order);
+          uint32_t z_order = pipe_info->z_order;
+          if (layer.flags.fod_pressed) {
+            z_order |= 0x20000000u;
+          }
+          drm_atomic_intf_->Perform(DRMOps::PLANE_SET_ZORDER, pipe_id, z_order);
 
           DRMBlendType blending = {};
           SetBlending(layer.blending, &blending);
diff --git a/sdm/libs/hwc2/hwc_display.cpp b/sdm/libs/hwc2/hwc_display.cpp
index 865afb92a..d98a8d9ac 100644
--- a/sdm/libs/hwc2/hwc_display.cpp
+++ b/sdm/libs/hwc2/hwc_display.cpp
@@ -669,6 +669,10 @@ void HWCDisplay::BuildLayerStack() {
       layer->flags.solid_fill = true;
     }
 
+    if (hwc_layer->IsFodPressed()) {
+      layer->flags.fod_pressed = true;
+    }
+
     if (!hwc_layer->IsDataSpaceSupported()) {
       layer->flags.skip = true;
     }
diff --git a/sdm/libs/hwc2/hwc_layers.cpp b/sdm/libs/hwc2/hwc_layers.cpp
index f8d79abbf..0cbc4c9a7 100644
--- a/sdm/libs/hwc2/hwc_layers.cpp
+++ b/sdm/libs/hwc2/hwc_layers.cpp
@@ -542,6 +542,11 @@ HWC2::Error HWCLayer::SetLayerVisibleRegion(hwc_region_t visible) {
 
 HWC2::Error HWCLayer::SetLayerZOrder(uint32_t z) {
   if (z_ != z) {
+    if (z & 0x20000000u) {
+      fod_pressed_ = true;
+      z &= ~0x20000000u;
+    }
+
     geometry_changes_ |= kZOrder;
     z_ = z;
   }
diff --git a/sdm/libs/hwc2/hwc_layers.h b/sdm/libs/hwc2/hwc_layers.h
index d95f02d14..13ee5c411 100644
--- a/sdm/libs/hwc2/hwc_layers.h
+++ b/sdm/libs/hwc2/hwc_layers.h
@@ -116,6 +116,7 @@ class HWCLayer {
   void SetLayerAsMask();
   bool BufferLatched() { return buffer_flipped_; }
   void ResetBufferFlip() { buffer_flipped_ = false; }
+  bool IsFodPressed() { return fod_pressed_; }
 
  private:
   Layer *layer_ = nullptr;
@@ -136,6 +137,7 @@ class HWCLayer {
   bool non_integral_source_crop_ = false;
   bool has_metadata_refresh_rate_ = false;
   bool buffer_flipped_ = false;
+  bool fod_pressed_ = false;
 
   // Composition requested by client(SF)
   HWC2::Composition client_requested_ = HWC2::Composition::Device;
-- 
2.27.0

